/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/

-- Find total customers by countries
select 
country,
count(customer_number) as total_customers
from gold.dim_customers
group by country
order by total_customers desc

-- Find total customers by gender
SELECT
    gender,
    COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;


select
gender,
count(*) as total_of_gender
from gold.dim_customers
group by gender
order by total_of_gender desc;

-- Find total products by category
select 
category,
count(*) as total_products
from gold.dim_products
group by category
order by total_products desc

-- What is the average costs in each category?
select 
category,
avg(cost) as avg_cost_each_cat
from gold.dim_products
group by category
order by avg_cost_each_cat desc;

-- What is the total revenue generated for each category?
select
dp.category,
sum(fs.sales_amount) as total_revenue
from gold.fact_sales as fs
left join gold.dim_products as dp
on fs.product_key = dp.product_key
group by dp.category
order by total_revenue desc;

-- What is the total revenue generated by each customer?
select
c.customer_key, 
sum(fs.sales_amount) as total_revenue
from gold.dim_customers as c
left join gold.fact_sales as fs
on c.customer_key = fs.customer_key
group by c.customer_key
order by total_revenue desc;

-- What is the distribution of sold items across countries?
select * from gold.fact_sales;
select * from gold.dim_customers;

select
c.country,
sum(fs.quantity) as total_items
from gold.dim_customers as c
left join gold.fact_sales as fs
on c.customer_key = fs.customer_key
group by c.country
order by total_items desc;